# Generated by Django 4.0.5 on 2022-06-27 18:39

import django.contrib.postgres.fields.citext
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django.contrib.postgres.fields.citext.CITextField(verbose_name='Наименование')),
                ('status', django.contrib.postgres.fields.citext.CITextField(choices=[('hidden', 'Скрыто'), ('announcement', 'Объявление'), ('openRegistration', 'Открытие регистрации на соревнование'), ('closeRegistration', 'Закрытие регистрации на соревнование'), ('startCompetition', 'Соревнование началось'), ('endCompetition', 'Соревнование завершилось'), ('publicationExtraMaterials', 'Публикация дополнительных материалов'), ('processingMaterials', 'Обработка материалов'), ('inArchive', 'В архиве')], verbose_name='Статус')),
                ('description', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Описание')),
                ('numberofparticipants', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Кол-во участников в команде')),
                ('numberComands', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Кол-во команд')),
                ('regulations', django.contrib.postgres.fields.citext.CITextField(verbose_name='Правила')),
                ('timeNow', models.DateTimeField(auto_now=True)),
                ('results', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Результаты')),
                ('materials', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Материалы')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d/events', verbose_name='Логотип')),
                ('date_register', models.DateTimeField(blank=True, verbose_name='Дата начала регистрации')),
                ('date_closeRegister', models.DateTimeField(blank=True, verbose_name='Дата конца регистрации')),
                ('date_start', models.DateTimeField(blank=True, verbose_name='Дата начала соревнования')),
                ('date_end', models.DateTimeField(blank=True, verbose_name='Дата конца соревнования')),
                ('additionalMaterial', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Дополнительные материалы')),
                ('timePublicationAdditionalMaterial', models.DateTimeField(blank=True, null=True, verbose_name='Время публикации дополнительных материалов')),
            ],
            options={
                'verbose_name': 'Соревнование',
                'verbose_name_plural': 'Соревнования',
                'db_table': 'event',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Organizers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d/organizers', verbose_name='Логотип')),
                ('name', django.contrib.postgres.fields.citext.CITextField(verbose_name='Наименование')),
                ('link', django.contrib.postgres.fields.citext.CITextField(verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Организатор',
                'verbose_name_plural': 'Организаторы',
                'db_table': 'organizers',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Participant',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django.contrib.postgres.fields.citext.CITextField(verbose_name='ФИО')),
                ('emailadress', models.EmailField(max_length=254, verbose_name='Электронная почта')),
                ('phonenumber', django.contrib.postgres.fields.citext.CITextField(verbose_name='Номер телефона')),
                ('organization', django.contrib.postgres.fields.citext.CITextField(verbose_name='Организация')),
                ('university_faculty', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Факультет')),
                ('university_course', django.contrib.postgres.fields.citext.CITextField(blank=True, null=True, verbose_name='Курс')),
                ('iscoach', models.BooleanField(blank=True, null=True, verbose_name='Тренер')),
                ('iscontactFace', models.BooleanField(blank=True, null=True, verbose_name='Контактное лицо')),
            ],
            options={
                'verbose_name': 'Участник',
                'verbose_name_plural': 'Участники',
                'db_table': 'participant',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Sponsors',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='images/%Y/%m/%d/sponsors', verbose_name='Логотип')),
                ('name', django.contrib.postgres.fields.citext.CITextField(verbose_name='Наименование')),
                ('link', django.contrib.postgres.fields.citext.CITextField(verbose_name='Ссылка')),
            ],
            options={
                'verbose_name': 'Спонсор',
                'verbose_name_plural': 'Спонсоры',
                'db_table': 'sponsors',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', django.contrib.postgres.fields.citext.CITextField(verbose_name='Наименование команды')),
                ('approvement', django.contrib.postgres.fields.citext.CITextField(choices=[('hold', 'Ожидает'), ('rejected', 'Отклонено'), ('approved', 'Принято')], default='hold', verbose_name='Статус заявки')),
                ('coach', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='my_coach', to='mainList.participant')),
                ('contactPerson', models.ForeignKey(default=1, on_delete=django.db.models.deletion.PROTECT, related_name='my_contactPerson', to='mainList.participant')),
                ('my_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='my_event', to='mainList.event', verbose_name='Соревнование')),
                ('teamMembers', models.ManyToManyField(to='mainList.participant')),
            ],
            options={
                'verbose_name': 'Команда',
                'verbose_name_plural': 'Команды',
                'db_table': 'team',
                'ordering': ['name'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='event',
            name='organizers',
            field=models.ManyToManyField(blank=True, related_name='my_organizers', to='mainList.organizers', verbose_name='Организаторы'),
        ),
        migrations.AddField(
            model_name='event',
            name='participants',
            field=models.ManyToManyField(blank=True, related_name='my_participants', to='mainList.team', verbose_name='Участвующие команды'),
        ),
        migrations.AddField(
            model_name='event',
            name='sponsors',
            field=models.ManyToManyField(blank=True, related_name='my_sponsors', to='mainList.sponsors', verbose_name='Спонсоры'),
        ),
    ]
